name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches-ignore:
      - main
jobs:
  Deploy-Preview:
    permissions:
    deployments: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: chrnorm/deployment-action@v2
        - name: Create GitHub deployment
          id: deployment
          with:
            token: ${{ secrets.TOKEN }}
            environment-url: https://nodejs-app-raghu2x.vercel.app/
            environment: preview

    # deploy application
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Install Dependencies
        run: npm install
      - name: Build Project Artifacts
        run: npm run build
      - name: Deploy Project Artifacts to Vercel
        run: vercel --token=${{ secrets.VERCEL_TOKEN }}

    # update deployment status
     - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.TOKEN }}
          environment-url: https://nodejs-app-raghu2x.vercel.app/
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.TOKEN }}
          environment-url: https://nodejs-app-raghu2x.vercel.app/
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}